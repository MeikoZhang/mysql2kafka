<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sixku.mysql2kafka.dao.ucard_loan.OrderFlowMapper">
  <resultMap id="BaseResultMap" type="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlow">
    <id column="flow_id" jdbcType="BIGINT" property="flowId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="start_status" jdbcType="VARCHAR" property="startStatus" />
    <result column="end_status" jdbcType="VARCHAR" property="endStatus" />
    <result column="approve_result" jdbcType="VARCHAR" property="approveResult" />
    <result column="result_explain" jdbcType="VARCHAR" property="resultExplain" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="register_channel" jdbcType="VARCHAR" property="registerChannel" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    flow_id, order_id, start_status, end_status, approve_result, result_explain, province, 
    register_channel, create_user, update_user, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_flow
    where flow_id = #{flowId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_flow
    where flow_id = #{flowId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlowExample">
    delete from order_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlow">
    insert into order_flow (flow_id, order_id, start_status, 
      end_status, approve_result, result_explain, 
      province, register_channel, create_user, 
      update_user, create_time, update_time
      )
    values (#{flowId,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, #{startStatus,jdbcType=VARCHAR}, 
      #{endStatus,jdbcType=VARCHAR}, #{approveResult,jdbcType=VARCHAR}, #{resultExplain,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{registerChannel,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlow">
    insert into order_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="startStatus != null">
        start_status,
      </if>
      <if test="endStatus != null">
        end_status,
      </if>
      <if test="approveResult != null">
        approve_result,
      </if>
      <if test="resultExplain != null">
        result_explain,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="registerChannel != null">
        register_channel,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="startStatus != null">
        #{startStatus,jdbcType=VARCHAR},
      </if>
      <if test="endStatus != null">
        #{endStatus,jdbcType=VARCHAR},
      </if>
      <if test="approveResult != null">
        #{approveResult,jdbcType=VARCHAR},
      </if>
      <if test="resultExplain != null">
        #{resultExplain,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        #{registerChannel,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlowExample" resultType="java.lang.Long">
    select count(*) from order_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_flow
    <set>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.startStatus != null">
        start_status = #{record.startStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.endStatus != null">
        end_status = #{record.endStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.approveResult != null">
        approve_result = #{record.approveResult,jdbcType=VARCHAR},
      </if>
      <if test="record.resultExplain != null">
        result_explain = #{record.resultExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.registerChannel != null">
        register_channel = #{record.registerChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_flow
    set flow_id = #{record.flowId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      start_status = #{record.startStatus,jdbcType=VARCHAR},
      end_status = #{record.endStatus,jdbcType=VARCHAR},
      approve_result = #{record.approveResult,jdbcType=VARCHAR},
      result_explain = #{record.resultExplain,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      register_channel = #{record.registerChannel,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlow">
    update order_flow
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="startStatus != null">
        start_status = #{startStatus,jdbcType=VARCHAR},
      </if>
      <if test="endStatus != null">
        end_status = #{endStatus,jdbcType=VARCHAR},
      </if>
      <if test="approveResult != null">
        approve_result = #{approveResult,jdbcType=VARCHAR},
      </if>
      <if test="resultExplain != null">
        result_explain = #{resultExplain,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        register_channel = #{registerChannel,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where flow_id = #{flowId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sixku.mysql2kafka.dao.ucard_loan.domain.OrderFlow">
    update order_flow
    set order_id = #{orderId,jdbcType=VARCHAR},
      start_status = #{startStatus,jdbcType=VARCHAR},
      end_status = #{endStatus,jdbcType=VARCHAR},
      approve_result = #{approveResult,jdbcType=VARCHAR},
      result_explain = #{resultExplain,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      register_channel = #{registerChannel,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where flow_id = #{flowId,jdbcType=BIGINT}
  </update>

  <select id="selectContractFlow" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_flow
    where order_id = #{orderId,jdbcType=VARCHAR} and end_status='20'
  </select>
</mapper>